name: Release Crate

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The exact version to release (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push commits and tags made by cargo-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches; cargo-release might need it.
          fetch-depth: 0

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Generate lockfile for caching purposes
        run: cargo update --manifest-path opener/Cargo.toml

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            opener/target/
            opener/Cargo.lock
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('opener/Cargo.toml') }}-${{ hashFiles('opener/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-cache-${{ hashFiles('opener/Cargo.toml') }}-
            ${{ runner.os }}-cargo-cache-

      - name: Install cargo-release
        run: |
          if ! command -v cargo-release &> /dev/null
          then
            cargo install cargo-release --locked
          else
            echo "cargo-release is already installed"
          fi

      - name: Run tests
        run: cargo test --all-features
        working-directory: ./opener

      - name: Check formatting
        run: cargo fmt -- --check
        working-directory: ./opener

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release and Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo release ${{ github.event.inputs.version }} --execute --no-confirm
        working-directory: ./opener 